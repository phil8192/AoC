NB.    4 <\ 1,1,1,2,2,3,4,5,6,7,8,9
NB. ┌───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┬───────┐
NB. │1 1 1 2│1 1 2 2│1 2 2 3│2 2 3 4│2 3 4 5│3 4 5 6│4 5 6 7│5 6 7 8│6 7 8 9│
NB. └───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┴───────┘

NB.    ~. each 4 <\ 1,1,1,2,2,3,4,5,6,7,8,9
NB. ┌───┬───┬─────┬─────┬───────┬───────┬───────┬───────┬───────┐
NB. │1 2│1 2│1 2 3│2 3 4│2 3 4 5│3 4 5 6│4 5 6 7│5 6 7 8│6 7 8 9│
NB. └───┴───┴─────┴─────┴───────┴───────┴───────┴───────┴───────┘

NB.    # each ~. each 4 <\ 1,1,1,2,2,3,4,5,6,7,8,9
NB. ┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
NB. │2│2│3│3│4│4│4│4│4│
NB. └─┴─┴─┴─┴─┴─┴─┴─┴─┘

NB. idea: find first max (4)...


NB. problem 1

readfile =: 1!:1
x =. readfile < 'in.txt'
m1=: i.>./                NB. 1st max index: https://www.jsoftware.com/help/phrases/locate_select.htm
nd=: #@(~.)               NB. (#) size of (~.) distinct elements (need @ for some reason)
4 + m1 > nd each 4 <\ x   NB. nd over sliding window of size 4, first max + 4
